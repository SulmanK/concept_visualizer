name: CI Tests (Backend & Frontend)

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch: # Allows manual triggering

jobs:
  backend-tests:
    name: Run Backend Tests (Python)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend # Set default directory for backend steps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment
        run: uv venv

      - name: Create test environment file
        run: |
          echo "SUPABASE_URL=https://example.supabase.co" > .env.test
          echo "SUPABASE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTYxNjEyMzYwMCwiZXhwIjoxOTMxNjk5NjAwfQ.fake-signature" >> .env.test
          echo "SUPABASE_JWT_SECRET=your-test-jwt-secret" >> .env.test
          echo "SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNjE2MTIzNjAwLCJleHAiOjE5MzE2OTk2MDB9.fake-service-role-signature" >> .env.test
          echo "JIGSAWSTACK_API_KEY=mock-jigsawstack-key" >> .env.test
          echo "REDIS_URL=redis://localhost:6379" >> .env.test
          echo "ENVIRONMENT=test" >> .env.test

      - name: Install backend dependencies
        # Install editable with dev dependencies for pytest
        run: uv pip install -e ".[dev]"

      - name: Run Pytest
        run: uv run pytest tests/ # Specify the tests directory
        env:
          SUPABASE_URL: "https://example.supabase.co"
          SUPABASE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QiLCJyb2xlIjoiYW5vbiIsImlhdCI6MTYxNjEyMzYwMCwiZXhwIjoxOTMxNjk5NjAwfQ.fake-signature"
          SUPABASE_JWT_SECRET: "your-test-jwt-secret"
          SUPABASE_SERVICE_ROLE_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InRlc3QiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNjE2MTIzNjAwLCJleHAiOjE5MzE2OTk2MDB9.fake-service-role-signature"
          JIGSAWSTACK_API_KEY: "mock-jigsawstack-key"
          REDIS_URL: "redis://localhost:6379"
          ENVIRONMENT: "test"

  backend-lint:
    name: Run Backend Linting and Type Checking
    needs: backend-tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install uv
        run: pip install uv
      - name: Create virtual environment
        run: uv venv
      - name: Install dev dependencies
        run: uv pip install -e ".[dev]"
      - name: Run mypy
        run: uv run mypy app
      - name: Run flake8
        run: uv run flake8 app

  frontend-tests:
    name: Run Frontend Tests (Node.js)
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/my-app # Set default directory for frontend steps

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm" # Enable caching for npm dependencies
          cache-dependency-path: frontend/my-app/package-lock.json # Cache based on lock file

      - name: Install frontend dependencies
        # Use 'ci' for clean installs in CI environments based on package-lock.json
        run: npm ci

      - name: Create test environment file
        run: |
          echo "VITE_SUPABASE_URL=https://example.supabase.co" > .env.test
          echo "VITE_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.mocktoken" >> .env.test
          echo "VITE_API_URL=http://localhost:8000/api" >> .env.test
          echo "VITE_ENVIRONMENT=test" >> .env.test

      - name: Run NPM Tests
        # The 'CI=true' environment variable makes test runners like Jest
        # run non-interactively and exit after tests complete.
        run: npm test
        env:
          CI: true
          VITE_SUPABASE_URL: "https://example.supabase.co"
          VITE_SUPABASE_ANON_KEY: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.mocktoken"
          VITE_API_URL: "http://localhost:8000/api"
          VITE_ENVIRONMENT: "test"

  frontend-lint:
    name: Run Frontend Linting and Type Checking
    needs: frontend-tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend/my-app
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"
          cache-dependency-path: frontend/my-app/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Run TypeScript type check
        run: npx tsc --noEmit
      - name: Run ESLint
        run: npx eslint --config eslint.config.js .
